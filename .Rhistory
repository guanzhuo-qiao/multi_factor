for(basket in 1:dim(portfolio_basket)[1]){
weight = portfolio_basket[basket,,]
rt = back_test(t(weight),t(bt_label_data))
plot.new()
if(basket==1){
lines(c(1:length(rt)),rt,xlab="",ylab = "",col="red")
}else{
lines(c(1:length(rt)),rt,xlab="",ylab = "")
}
}
for(basket in 1:dim(portfolio_basket)[1]){
weight = portfolio_basket[basket,,]
rt = back_test(t(weight),t(bt_label_data))
if(basket==1){
plot(c(1:length(rt)),rt,type="l",xlab="",ylab = "",col="red")
}else{
lines(c(1:length(rt)),rt,xlab="",ylab = "")
}
}
for(basket in 1:dim(portfolio_basket)[1]){
weight = portfolio_basket[basket,,]
rt = back_test(t(weight),t(bt_label_data))
if(basket==1){
plot(c(1:length(rt)),rt,type="l",xlab="",ylab = "",col="red")
}else{
plot(c(1:length(rt)),rt,xlab="",ylab = "")
}
}
for(basket in 1:dim(portfolio_basket)[1]){
weight = portfolio_basket[basket,,]
rt = back_test(t(weight),t(bt_label_data))
if(basket==1){
plot(c(1:length(rt)),rt,type="l",xlab="",ylab = "",col="red")
}else{
lines(c(1:length(rt)),rt,xlab="",ylab = "")
}
}
title("cumulative return")
plot(xlab="time months")
for(basket in 1:dim(portfolio_basket)[1]){
weight = portfolio_basket[basket,,]
rt = back_test(t(weight),t(bt_label_data))
if(basket==1){
plot(c(1:length(rt)),rt,type="l",xlab="time months",ylab = "return",col="red")
}else{
lines(c(1:length(rt)),rt,xlab="",ylab = "")
}
}
title("cumulative return")
benchmark_label
result_report_table = list()
rt = back_test(t(weight),t(bt_label_data))
back_test <- function(stck_weights,stck_returns){# time;stocks
return(diag(stck_weights %*% t(stck_returns)))
}
get_te <- function(benchmark_return,portfolio_return,te_time){
diff_return = portfolio_return-benchmark_return
vol = sd(diff_return)
res = vol*sqrt(12/te_time)
return(res)
}
for(basket in 1:dim(portfolio_basket)[1]){
weight = portfolio_basket[basket,,]
rt = back_test(t(weight),t(bt_label_data))
cp_rt = cumprod(1+rt)
if(basket==1){
plot(c(1:length(cp_rt)),cp_rt,type="l",xlab="time months",ylab = "return",col="red")
}else{
lines(c(1:length(cp_rt)),cp_rt,xlab="",ylab = "")
}
result_report_table["tracking error"]=get_te(benchmark_label,rt,length(rt))
}
title("cumulative return")
result_report_table
result_report_table = matrix(dimnames = list(col_names:"crt_p","crt_b","te","mdd"))
result_report_table = matrix(dimnames = list(col_names="crt_p","crt_b","te","mdd"))
result_report_table = matrix(dimnames = list(col_names=c("crt_p","crt_b","te","mdd")))
result_report_table = matrix(dimnames = list(col_names=c("crt_p","crt_b","te","mdd"),row_names=c("b1","b2","b3","b4")))
result_report_table = array(dim=c(dim(portfolio_basket)[1],4),dimnames = list(col_names=c("crt_p","crt_b","te","mdd"),row_names=c("b1","b2","b3","b4")))
result_report_table
result_report_table = array(dim=c(dim(portfolio_basket)[1],4),dimnames = list(row_names=c("b1","b2","b3","b4"),col_names=c("crt_p","crt_b","te","mdd")))
result_report_table
library(tseries);
install.packages("tseries")
library(tseries)
maxdrawdown(cp_rt)
result_report_table = array(dim=c(dim(portfolio_basket)[1],4),dimnames = list(row_names=c("b1","b2","b3","b4"),col_names=c("crt_p","crt_b","te","mdd")))
for(basket in 1:dim(portfolio_basket)[1]){
weight = portfolio_basket[basket,,]
rt = back_test(t(weight),t(bt_label_data))
cp_rt = cumprod(1+rt)
if(basket==1){
plot(c(1:length(cp_rt)),cp_rt,type="l",xlab="time months",ylab = "return",col="red")
}else{
lines(c(1:length(cp_rt)),cp_rt,xlab="",ylab = "")
}
te=get_te(benchmark_label,rt,length(rt))
mdd = maxdrawdown(cp_rt)$maxdrawdown
crt_b = cumprod(1+benchmark_label)[length(benchmark_label)]
crt_p = cp_rt[length(cp_rt)]
result_report_table[basket,] = c(crt_p,crt_b,te,mdd)
}
lines(c(1:length(benchmark_label)),cumprod(1+benchmark_label),xlab="",ylab = "")
title("cumulative return")
result_report_table = array(dim=c(dim(portfolio_basket)[1],4),dimnames = list(row_names=c("b1","b2","b3","b4"),col_names=c("crt_p","crt_b","te","mdd")))
for(basket in 1:dim(portfolio_basket)[1]){
weight = portfolio_basket[basket,,]
rt = back_test(t(weight),t(bt_label_data))
cp_rt = cumprod(1+rt)
if(basket==1){
plot(c(1:length(cp_rt)),cp_rt,type="l",xlab="time months",ylab = "return",col="red")
}else{
lines(c(1:length(cp_rt)),cp_rt,xlab="",ylab = "")
}
te=get_te(benchmark_label,rt,length(rt))
mdd = maxdrawdown(cp_rt)$maxdrawdown
crt_b = cumprod(1+benchmark_label)[length(benchmark_label)]
crt_p = cp_rt[length(cp_rt)]
result_report_table[basket,] = c(crt_p,crt_b,te,mdd)
}
lines(c(1:length(benchmark_label)),cumprod(1+benchmark_label),xlab="",ylab = "",col="blue")
title("cumulative return")
result_report_table
legend(legend = c("b1","b2","b3","b4","benchmark"))
legend(-1,legend = c("b1","b2","b3","b4","benchmark"))
legend(-1,1.9,legend = c("b1","b2","b3","b4","benchmark"))
result_report_table = array(dim=c(dim(portfolio_basket)[1],4),dimnames = list(row_names=c("b1","b2","b3","b4"),col_names=c("crt_p","crt_b","te","mdd")))
for(basket in 1:dim(portfolio_basket)[1]){
weight = portfolio_basket[basket,,]
rt = back_test(t(weight),t(bt_label_data))
cp_rt = cumprod(1+rt)
if(basket==1){
plot(c(1:length(cp_rt)),cp_rt,type="l",xlab="time months",ylab = "return",col="red")
}else{
lines(c(1:length(cp_rt)),cp_rt,xlab="",ylab = "")
}
te=get_te(benchmark_label,rt,length(rt))
mdd = maxdrawdown(cp_rt)$maxdrawdown
crt_b = cumprod(1+benchmark_label)[length(benchmark_label)]
crt_p = cp_rt[length(cp_rt)]
result_report_table[basket,] = c(crt_p,crt_b,te,mdd)
}
lines(c(1:length(benchmark_label)),cumprod(1+benchmark_label),xlab="",ylab = "",col="blue")
title("cumulative return")
legend(-1,1.9,legend = c("b1","b2","b3","b4","benchmark"))
legend(0,1.9,legend = c("b1","b2","b3","b4","benchmark"))
legend(5,1.9,legend = c("b1","b2","b3","b4","benchmark"))
legend(1.3,1.3,legend = c("b1","b2","b3","b4","benchmark"))
legend(1.3,1.4,legend = c("b1","b2","b3","b4","benchmark"))
result_report_table = array(dim=c(dim(portfolio_basket)[1],4),dimnames = list(row_names=c("b1","b2","b3","b4"),col_names=c("crt_p","crt_b","te","mdd")))
for(basket in 1:dim(portfolio_basket)[1]){
weight = portfolio_basket[basket,,]
rt = back_test(t(weight),t(bt_label_data))
cp_rt = cumprod(1+rt)
if(basket==1){
plot(c(1:length(cp_rt)),cp_rt,type="l",xlab="time months",ylab = "return",col="red")
}else{
lines(c(1:length(cp_rt)),cp_rt,xlab="",ylab = "")
}
te=get_te(benchmark_label,rt,length(rt))
mdd = maxdrawdown(cp_rt)$maxdrawdown
crt_b = cumprod(1+benchmark_label)[length(benchmark_label)]
crt_p = cp_rt[length(cp_rt)]
result_report_table[basket,] = c(crt_p,crt_b,te,mdd)
}
lines(c(1:length(benchmark_label)),cumprod(1+benchmark_label),xlab="",ylab = "",col="blue")
title("cumulative return")
legend(1.3,1.4,legend = c("b1","b2","b3","b4","benchmark"))
result_report_table
sharpe_rt = sharpe(cp_rt)
sharpe_rt
sharpe_rt = sharpe(rt)
sharpe_rt
mdd = maxdrawdown(rt)$maxdrawdown
mdd
maxdrawdown(cp_rt)$maxdrawdown
sharpe_rt = sharpe(rt)
sharpe_rt
result_report_table = array(dim=c(dim(portfolio_basket)[1],5),dimnames = list(row_names=c("b1","b2","b3","b4"),col_names=c("crt_p","crt_b","te","mdd","sharpe")))
for(basket in 1:dim(portfolio_basket)[1]){
weight = portfolio_basket[basket,,]
rt = back_test(t(weight),t(bt_label_data))
cp_rt = cumprod(1+rt)
if(basket==1){
plot(c(1:length(cp_rt)),cp_rt,type="l",xlab="time months",ylab = "return",col="red")
}else{
lines(c(1:length(cp_rt)),cp_rt,xlab="",ylab = "")
}
te=get_te(benchmark_label,rt,length(rt))
mdd = maxdrawdown(cp_rt)$maxdrawdown
crt_b = cumprod(1+benchmark_label)[length(benchmark_label)]
crt_p = cp_rt[length(cp_rt)]
sharpe_rt = sharpe(rt)
result_report_table[basket,] = c(crt_p,crt_b,te,mdd,sharpe_rt)
}
lines(c(1:length(benchmark_label)),cumprod(1+benchmark_label),xlab="",ylab = "",col="blue")
title("cumulative return")
legend(1.3,1.4,legend = c("b1","b2","b3","b4","benchmark"))
result_report_table
result_report_table = array(dim=c(dim(portfolio_basket)[1],5),dimnames = list(row_names=c("b1","b2","b3","b4"),col_names=c("crt_p","crt_b","te","mdd","sharpe")))
for(basket in 1:dim(portfolio_basket)[1]){
weight = portfolio_basket[basket,,]
rt = back_test(t(weight),t(bt_label_data))
cp_rt = cumprod(1+rt)
if(basket==1){
plot(c(1:length(cp_rt)),cp_rt,type="l",xlab="time months",ylab = "return",col="red")
}else{
lines(c(1:length(cp_rt)),cp_rt,xlab="",ylab = "",col=rainbow())
}
te=get_te(benchmark_label,rt,length(rt))
mdd = maxdrawdown(cp_rt)$maxdrawdown
crt_b = cumprod(1+benchmark_label)[length(benchmark_label)]
crt_p = cp_rt[length(cp_rt)]
sharpe_rt = sharpe(rt)
result_report_table[basket,] = c(crt_p,crt_b,te,mdd,sharpe_rt)
}
lines(c(1:length(benchmark_label)),cumprod(1+benchmark_label),xlab="",ylab = "",col="blue")
title("cumulative return")
legend(1.3,1.4,legend = c("b1","b2","b3","b4","benchmark"))
rainbow()
heat.colors()
rainbow(5)
result_report_table = array(dim=c(dim(portfolio_basket)[1],5),dimnames = list(row_names=c("b1","b2","b3","b4"),col_names=c("crt_p","crt_b","te","mdd","sharpe")))
color = rainbow(dim(portfolio_basket)[1])
for(basket in 1:dim(portfolio_basket)[1]){
weight = portfolio_basket[basket,,]
rt = back_test(t(weight),t(bt_label_data))
cp_rt = cumprod(1+rt)
if(basket==1){
plot(c(1:length(cp_rt)),cp_rt,type="l",xlab="time months",ylab = "return",col=color[basket])
}else{
lines(c(1:length(cp_rt)),cp_rt,xlab="",ylab = "",col=color[basket])
}
te=get_te(benchmark_label,rt,length(rt))
mdd = maxdrawdown(cp_rt)$maxdrawdown
crt_b = cumprod(1+benchmark_label)[length(benchmark_label)]
crt_p = cp_rt[length(cp_rt)]
sharpe_rt = sharpe(rt)
result_report_table[basket,] = c(crt_p,crt_b,te,mdd,sharpe_rt)
}
lines(c(1:length(benchmark_label)),cumprod(1+benchmark_label),xlab="",ylab = "",col="blue")
title("cumulative return")
legend(1.3,1.4,legend = c("b1","b2","b3","b4","benchmark"),col = color)
legend("bottomleft",legend = c("b1","b2","b3","b4","benchmark"),col = color)
legend("topleft",legend = c("b1","b2","b3","b4","benchmark"),col = color)
result_report_table = array(dim=c(dim(portfolio_basket)[1],5),dimnames = list(row_names=c("b1","b2","b3","b4"),col_names=c("crt_p","crt_b","te","mdd","sharpe")))
color = rainbow(dim(portfolio_basket)[1])
for(basket in 1:dim(portfolio_basket)[1]){
weight = portfolio_basket[basket,,]
rt = back_test(t(weight),t(bt_label_data))
cp_rt = cumprod(1+rt)
if(basket==1){
plot(c(1:length(cp_rt)),cp_rt,type="l",xlab="time months",ylab = "return",col=color[basket])
}else{
lines(c(1:length(cp_rt)),cp_rt,xlab="",ylab = "",col=color[basket])
}
te=get_te(benchmark_label,rt,length(rt))
mdd = maxdrawdown(cp_rt)$maxdrawdown
crt_b = cumprod(1+benchmark_label)[length(benchmark_label)]
crt_p = cp_rt[length(cp_rt)]
sharpe_rt = sharpe(rt)
result_report_table[basket,] = c(crt_p,crt_b,te,mdd,sharpe_rt)
}
lines(c(1:length(benchmark_label)),cumprod(1+benchmark_label),xlab="",ylab = "",col="blue")
title("cumulative return")
legend("topleft",legend = c("b1","b2","b3","b4","benchmark"),col = color)
legend("topleft",legend = c("b1","b2","b3","b4","benchmark"),lty = c(2, -1, 1),col = color)
legend("topleft",legend = c("b1","b2","b3","b4","benchmark"),lty = c(-1, -1, -1),col = color)
legend("topleft",legend = c("b1","b2","b3","b4","benchmark"),lty = c(1, 1, 1),col = color)
legend("topleft",legend = c("b1","b2","b3","b4","benchmark"),lty = c(1),col = color)
result_report_table = array(dim=c(dim(portfolio_basket)[1],5),dimnames = list(row_names=c("b1","b2","b3","b4"),col_names=c("crt_p","crt_b","te","mdd","sharpe")))
color = rainbow(dim(portfolio_basket)[1])
for(basket in 1:dim(portfolio_basket)[1]){
weight = portfolio_basket[basket,,]
rt = back_test(t(weight),t(bt_label_data))
cp_rt = cumprod(1+rt)
if(basket==1){
plot(c(1:length(cp_rt)),cp_rt,type="l",xlab="time months",ylab = "return",col=color[basket])
}else{
lines(c(1:length(cp_rt)),cp_rt,xlab="",ylab = "",col=color[basket])
}
te=get_te(benchmark_label,rt,length(rt))
mdd = maxdrawdown(cp_rt)$maxdrawdown
crt_b = cumprod(1+benchmark_label)[length(benchmark_label)]
crt_p = cp_rt[length(cp_rt)]
sharpe_rt = sharpe(rt)
result_report_table[basket,] = c(crt_p,crt_b,te,mdd,sharpe_rt)
}
lines(c(1:length(benchmark_label)),cumprod(1+benchmark_label),xlab="",ylab = "",col="blue")
title("cumulative return")
legend("topleft",legend = c("b1","b2","b3","b4","benchmark"),lty = c(1),col = color)
result_report_table = array(dim=c(dim(portfolio_basket)[1],5),dimnames = list(row_names=c("b1","b2","b3","b4"),col_names=c("crt_p","crt_b","te","mdd","sharpe")))
color = rainbow(dim(portfolio_basket)[1])
for(basket in 1:dim(portfolio_basket)[1]){
weight = portfolio_basket[basket,,]
rt = back_test(t(weight),t(bt_label_data))
cp_rt = cumprod(1+rt)
if(basket==1){
plot(c(1:length(cp_rt)),cp_rt,type="l",xlab="time months",ylab = "return",col=color[basket])
}else{
lines(c(1:length(cp_rt)),cp_rt,xlab="",ylab = "",col=color[basket])
}
te=get_te(benchmark_label,rt,length(rt))
mdd = maxdrawdown(cp_rt)$maxdrawdown
crt_b = cumprod(1+benchmark_label)[length(benchmark_label)]
crt_p = cp_rt[length(cp_rt)]
sharpe_rt = sharpe(rt)
result_report_table[basket,] = c(crt_p,crt_b,te,mdd,sharpe_rt)
}
lines(c(1:length(benchmark_label)),cumprod(1+benchmark_label),xlab="",ylab = "",col="blue")
title("cumulative return")
legend("topleft",legend = c("b1","b2","b3","b4","bm"),lty = c(1),col = color)
color
rbind(color,"blue")
cbind(color,"blue")
c(color,"blue")
result_report_table = array(dim=c(dim(portfolio_basket)[1],5),dimnames = list(row_names=c("b1","b2","b3","b4"),col_names=c("crt_p","crt_b","te","mdd","sharpe")))
color = rainbow(dim(portfolio_basket)[1])
for(basket in 1:dim(portfolio_basket)[1]){
weight = portfolio_basket[basket,,]
rt = back_test(t(weight),t(bt_label_data))
cp_rt = cumprod(1+rt)
if(basket==1){
plot(c(1:length(cp_rt)),cp_rt,type="l",xlab="time months",ylab = "return",col=color[basket])
}else{
lines(c(1:length(cp_rt)),cp_rt,xlab="",ylab = "",col=color[basket])
}
te=get_te(benchmark_label,rt,length(rt))
mdd = maxdrawdown(cp_rt)$maxdrawdown
crt_b = cumprod(1+benchmark_label)[length(benchmark_label)]
crt_p = cp_rt[length(cp_rt)]
sharpe_rt = sharpe(rt)
result_report_table[basket,] = c(crt_p,crt_b,te,mdd,sharpe_rt)
}
lines(c(1:length(benchmark_label)),cumprod(1+benchmark_label),xlab="",ylab = "",col="blue")
title("cumulative return")
legend("topleft",legend = c("b1","b2","b3","b4","bm"),lty = c(1),col = c(color,"blue"))
library(quantmod)
library(TTR)
library(Rglpk)
load("factor_table.rda")
load("label_table.rda")
load("stock_list.rda")
data_cleaner <- function(data_set){
for(i in 2:dim(data_set)[2]){# exclude first one due to NaN
cross_sec_data = data_set[,i,]
cross_sec_data = t(na.omit(t(cross_sec_data)))
# process extreme values
med = apply(cross_sec_data,2,median)
med_matrix = sapply(med,rep,dim(cross_sec_data)[1])
mad = apply(abs(cross_sec_data-med_matrix),2,median)
rank_table = apply(cross_sec_data, 2, rank)
ceiling = med+3*1.483*mad
floor = med-3*1.483*mad
for(j in 1:dim(cross_sec_data)[2]){
tmp = cross_sec_data[,j]
top_index = which(tmp>ceiling[j])
top_rank = rank_table[top_index,j]
if(mad[j]!=0){
cross_sec_data[top_index,j] = ceiling[j]+0.5*1.483*mad[j]/(length(top_rank)+1)*(top_rank-(length(tmp)-length(top_rank)))
}
bottom_index = which(tmp<floor[j])
bottom_rank = rank_table[bottom_index,j]
if(mad[j]!=0){
cross_sec_data[bottom_index,j] = floor[j]-0.5*1.483*mad[j]/(length(bottom_rank)+1)*(length(bottom_rank)+1-bottom_rank)
}
}
# normalize
cross_sec_data <- scale(cross_sec_data)
data_set[,i,] = cross_sec_data
}
data_set[,-1,]
}
features = data_cleaner(features)
data_orthogonal <- function(data_set){
for(i in 1:dim(data_set)[2]){
cross_sec_data = data_set[,i,]
m = t(cross_sec_data)%*%cross_sec_data
eigen_of_m = eigen(m,symmetric=T)
d = diag(1/sqrt(eigen_of_m$values))
u = eigen_of_m$vectors
s = u%*%d%*%t(u)
data_set[,i,] = cross_sec_data%*%s
print(i)
}
data_set
}
features = data_orthogonal(features)
# weighted sum according to ICIR
get_sum_factor <- function(label_data,feature_data,looking_back){
# looking_back: control the rolling back period of ICIR
# exclude the first column due to the lack of features' data
# exclude the second on due to the need of lag 1 period data
lag_label_data = label_data[,c(-1,-2),] # 2d table
lag_feature_data = feature_data[,1:dim(feature_data)[2]-1,]
cor_table = array(dim=c(dim(lag_feature_data)[2],dim(lag_feature_data)[3])) # row: time; column: factors
for(layer in 1:dim(lag_feature_data)[2]){
cc = apply(X=lag_feature_data[,layer,],MARGIN = 2,FUN=cor,y=lag_label_data[,layer],method="spearman")
cor_table[layer,] = cc
#print(layer)
}
ir_table = rollapply(data=cor_table,width=looking_back,FUN=mean)/rollapply(data=cor_table,width=looking_back,FUN=sd)
#weighted sum
new_features_data = lag_feature_data[,-1:(-looking_back+1),]
result_reatures_data = array(dim = c(dim(new_features_data)[1],dim(new_features_data)[2]))
for(layer in 1:dim(new_features_data)[2]){
weight = ir_table[layer,]
cross_sec_data = new_features_data[,layer,]
sum_factor = apply(cross_sec_data, MARGIN=1, FUN="%*%", weight)
result_reatures_data[,layer] = sum_factor #row: stock; column:time
}
result_reatures_data
}
looking_back_period = 5
new_features = get_sum_factor(label_table,features,looking_back_period)
# select the stocks subject to new factors
bt_label_data = label_table[,-1:-(looking_back_period+1+1),] # the feature use looking back period and 1 future return to get.another 1 due to nan
bt_features = new_features[,-dim(new_features)[2]] #the last data can't be tested due to outrage of the time period
bt_features
head(bt_features)
load("portfolio_basket.rda")
load("bt_label_data.rda")
load("bt_features.rda")
# download benchmark
looking_back_period = 5
benchmark_label = benchmark_label[-1:-(looking_back_period+1+1)]
result_report_table = array(dim=c(dim(portfolio_basket)[1],5),dimnames = list(row_names=c("b1","b2","b3","b4"),col_names=c("crt_p","crt_b","te","mdd","sharpe")))
color = rainbow(dim(portfolio_basket)[1])
for(basket in 1:dim(portfolio_basket)[1]){
weight = portfolio_basket[basket,,]
rt = back_test(t(weight),t(bt_label_data))
cp_rt = cumprod(1+rt)
if(basket==1){
plot(c(1:length(cp_rt)),cp_rt,type="l",xlab="time: months",ylab = "return",col=color[basket])
}else{
lines(c(1:length(cp_rt)),cp_rt,xlab="",ylab = "",col=color[basket])
}
te=get_te(benchmark_label,rt,length(rt))
mdd = maxdrawdown(cp_rt)$maxdrawdown
crt_b = cumprod(1+benchmark_label)[length(benchmark_label)]
crt_p = cp_rt[length(cp_rt)]
sharpe_rt = sharpe(rt)
result_report_table[basket,] = c(crt_p,crt_b,te,mdd,sharpe_rt)
}
lines(c(1:length(benchmark_label)),cumprod(1+benchmark_label),xlab="",ylab = "",col="blue")
title("cumulative return")
legend("topleft",legend = c("b1","b2","b3","b4","bm"),lty = c(1),col = c(color,"blue"))
library(quantmod)
library(TTR)
library(tseries)
back_test <- function(stck_weights,stck_returns){# time;stocks
return(diag(stck_weights %*% t(stck_returns)))
}
get_te <- function(benchmark_return,portfolio_return,te_time){
diff_return = portfolio_return-benchmark_return
vol = sd(diff_return)
res = vol*sqrt(12/te_time)
return(res)
}
load("portfolio_basket.rda")
load("bt_label_data.rda")
load("bt_features.rda")
# download benchmark
looking_back_period = 5
benchmark_label = benchmark_label[-1:-(looking_back_period+1+1)]
result_report_table = array(dim=c(dim(portfolio_basket)[1],5),dimnames = list(row_names=c("b1","b2","b3","b4"),col_names=c("crt_p","crt_b","te","mdd","sharpe")))
color = rainbow(dim(portfolio_basket)[1])
for(basket in 1:dim(portfolio_basket)[1]){
weight = portfolio_basket[basket,,]
rt = back_test(t(weight),t(bt_label_data))
cp_rt = cumprod(1+rt)
if(basket==1){
plot(c(1:length(cp_rt)),cp_rt,type="l",xlab="time: months",ylab = "return",col=color[basket])
}else{
lines(c(1:length(cp_rt)),cp_rt,xlab="",ylab = "",col=color[basket])
}
te=get_te(benchmark_label,rt,length(rt))
mdd = maxdrawdown(cp_rt)$maxdrawdown
crt_b = cumprod(1+benchmark_label)[length(benchmark_label)]
crt_p = cp_rt[length(cp_rt)]
sharpe_rt = sharpe(rt)
result_report_table[basket,] = c(crt_p,crt_b,te,mdd,sharpe_rt)
}
lines(c(1:length(benchmark_label)),cumprod(1+benchmark_label),xlab="",ylab = "",col="blue")
title("cumulative return")
legend("topleft",legend = c("b1","b2","b3","b4","bm"),lty = c(1),col = c(color,"blue"))
benchmark_label
load("benchmark_label.rda")
looking_back_period = 5
benchmark_label = benchmark_label[-1:-(looking_back_period+1+1)]
result_report_table = array(dim=c(dim(portfolio_basket)[1],5),dimnames = list(row_names=c("b1","b2","b3","b4"),col_names=c("crt_p","crt_b","te","mdd","sharpe")))
color = rainbow(dim(portfolio_basket)[1])
for(basket in 1:dim(portfolio_basket)[1]){
weight = portfolio_basket[basket,,]
rt = back_test(t(weight),t(bt_label_data))
cp_rt = cumprod(1+rt)
if(basket==1){
plot(c(1:length(cp_rt)),cp_rt,type="l",xlab="time: months",ylab = "return",col=color[basket])
}else{
lines(c(1:length(cp_rt)),cp_rt,xlab="",ylab = "",col=color[basket])
}
te=get_te(benchmark_label,rt,length(rt))
mdd = maxdrawdown(cp_rt)$maxdrawdown
crt_b = cumprod(1+benchmark_label)[length(benchmark_label)]
crt_p = cp_rt[length(cp_rt)]
sharpe_rt = sharpe(rt)
result_report_table[basket,] = c(crt_p,crt_b,te,mdd,sharpe_rt)
}
lines(c(1:length(benchmark_label)),cumprod(1+benchmark_label),xlab="",ylab = "",col="blue")
title("cumulative return")
legend("topleft",legend = c("b1","b2","b3","b4","bm"),lty = c(1),col = c(color,"blue"))
result_report_table
